#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.11
# from Racc grammer file "".
#

require 'racc/parser.rb'
module CakeLang
  class Parser < Racc::Parser


  def parse(tokens)
    @tokens = tokens

    do_parse
  end

  #
  # Returns the next token to process
  # @return [Array]
  #
  def next_token
    @tokens.shift
  end
##### State transition tables begin ###

racc_action_table = [
     4,    11,     5,     7,     8,     9,    10,     6,    13,    14,
    15,    16,    17 ]

racc_action_check = [
     0,     8,     0,     4,     5,     6,     7,     1,    10,    12,
    13,    14,    15 ]

racc_action_pointer = [
   -11,     7,   nil,   nil,   -10,   -11,     5,    -9,   -13,   nil,
    -5,   nil,    -5,    -7,    -1,    -1,   nil,   nil ]

racc_action_default = [
    -8,    -8,    -1,    -2,    -8,    -7,    -8,    -8,    -8,    18,
    -8,    -6,    -8,    -4,    -8,    -8,    -3,    -5 ]

racc_goto_table = [
     1,     2,     3,    12 ]

racc_goto_check = [
     1,     2,     3,     4 ]

racc_goto_pointer = [
   nil,     0,     1,     2,    -7 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 19, :_reduce_none,
  1, 19, :_reduce_none,
  6, 20, :_reduce_3,
  1, 22, :_reduce_none,
  3, 22, :_reduce_5,
  3, 21, :_reduce_6,
  1, 21, :_reduce_7 ]

racc_reduce_n = 8

racc_shift_n = 18

racc_token_table = {
  false => 0,
  :error => 1,
  :T_INT => 2,
  :T_FLOAT => 3,
  :T_ADD => 4,
  :T_DIV => 5,
  :T_MUL => 6,
  :T_SUB => 7,
  :T_MOD => 8,
  :T_EXP => 9,
  :T_EQL => 10,
  :T_KEYWORD_DEF => 11,
  :T_KEYWORD_END => 12,
  :T_EXPRESSION => 13,
  :T_RBR => 14,
  :T_LBR => 15,
  :T_DQUOTE => 16,
  :T_COL => 17 }

racc_nt_base = 18

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "T_INT",
  "T_FLOAT",
  "T_ADD",
  "T_DIV",
  "T_MUL",
  "T_SUB",
  "T_MOD",
  "T_EXP",
  "T_EQL",
  "T_KEYWORD_DEF",
  "T_KEYWORD_END",
  "T_EXPRESSION",
  "T_RBR",
  "T_LBR",
  "T_DQUOTE",
  "T_COL",
  "$start",
  "program",
  "defn",
  "call",
  "arglist" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

# reduce 2 omitted

def _reduce_3(val, _values, result)
 result = [:script, [:defn, val[1], [:arglist, val[3]]]] 
    result
end

# reduce 4 omitted

def _reduce_5(val, _values, result)
      result = []
      val.each do |value|
        result << value unless value.eql?(',')
      end
    
    result
end

def _reduce_6(val, _values, result)
 result = [:script, [:call, val[0]]] 
    result
end

def _reduce_7(val, _values, result)
 result = [:script, [:call, val[0]]] 
    result
end

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module CakeLang
